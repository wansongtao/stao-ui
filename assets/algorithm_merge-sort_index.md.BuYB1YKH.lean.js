import{B as y}from"./chunks/baseSort.B9phsB3y.js";import{d as F,o as r,b as c,k as C,c as o,I as B,a3 as g}from"./chunks/framework.DtS1GCNb.js";import"./chunks/stao-ui-utils.BeyqDMGl.js";import"./chunks/MapCache.D46w3Ur3.js";import"./chunks/index.DOFZgDuz.js";const A="/stao-ui/assets/mergesort.CCWs4mwG.webp";function E(s,h=(i,k)=>i>k){const i=s.length;if(i<2)return s;const k=Math.floor(i/2),l=E(s.slice(0,k),h),t=E(s.slice(k),h),p=[],e=l.length,d=t.length;let a=0,n=0;do h(t[n],l[a])?(p.push(l[a]),a++):(p.push(t[n]),n++);while(a<e&&n<d);return p.concat(a<e?l.slice(a):t.slice(n))}const D=F({__name:"sort",setup(s){return(h,i)=>(r(),c(y,{sort:C(E)},null,8,["sort"]))}}),u=g("",14),m=g("",1),S=JSON.parse('{"title":"Merge Sort 归并排序","description":"","frontmatter":{"head":[["link",{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.5.1/katex.min.css"}]]},"headers":[],"relativePath":"algorithm/merge-sort/index.md","filePath":"algorithm/merge-sort/index.md","lastUpdated":1698633363000}'),f={name:"algorithm/merge-sort/index.md"},j=Object.assign(f,{setup(s){return(h,i)=>(r(),o("div",null,[u,B(D),m]))}});export{S as __pageData,j as default};
